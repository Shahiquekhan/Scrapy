---sudo apt-get install git


git config --global user.name "username"
git config --global user.email "EmailID@##.com"
git init (to initialize the git)
git status

git commit (first time commit new window will be open then press i and type "Initial commit" and then press ESC and type :WQ)
or
git commit -m "File added."

git add -A (to add all files)

git checkout (to recover file from last modified)
git checkout -f ( to recover all files from last modified)
git log (to check log)
git diff (compare file from working area)
git diff --staged (to compare staging area from last commit)
git commit -a -m "Adding directly to repository"
git rm --cached filename (to removed from staging area)
git rm filename (to removed from working area)
touch .gitignore (to ignore unneccesary files to push)(*.log to ignore log file with .log extention)

git branch branchName (to create branch)
git branch (to fetch branch names)
git checkout branchName (to switch branch)

git checkout -b branchName (to create and switch to new brach)

git checkout master
git merge branchName (to merge in master branch)

git clone git@github.com:Shahiquekhan/Scrapy.git

ssh-keygen -t rsa -b 4096 -C "shahiquzzama@gmail.com"
eval $(ssh-agent -s)
ssh-add ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub

git push -u origin branchName

//remove and add userEmail
git config --global --replace-all user.email "new@mail.com"

//remove and add userName
git config --global --replace-all user.name "NewName"

//Update the URL of origin remote using SSH instead of HTTPS;
git remote set-url origin git@github.com:username/repo.git

//Make Git store the username and password and it will never ask for them.
git config --global credential.helper store

//Save the username and password for a session (cache it);
git config --global credential.helper cache






